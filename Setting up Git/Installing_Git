# Git and Version Control

Version control systems are a category of software tools that help a software team manage changes to source code over time. It keeps track of every modification to the code in a database. Even if you&#39;re just a single developer, version control helps you stay organized as you fix bugs and develop new features. It keeps a history of your development so that you can review and even rollback to any version of your code with ease.
![Version control](https://user-images.githubusercontent.com/32607702/32041758-f24f2ac0-ba52-11e7-8834-90322166c780.png)

## Version control workflow

1. Get a local copy of code if they don&#39;t have one yet.
2. Make changes to code to fix bugs or add new features.
3. Once the code is ready, make it available for review by your team.
4. Once the code is reviewed, merge it into the team&#39;s shared codebase.

## Git workflow

1. **Create a repository**  for the project you want and give it a name, such as Project X, or Dream Project. A Git repository, or repo, is a folder that you&#39;ve told Git to help you track file changes in.
2. **Clone Repository** into local machine so that you can work on it locally, each time you edit the file, git will save a revision of it.
3. **Commit changes**  to your branch. All the edits you made locally must be commited, so that git will track all the changes.  before they can be uploaded to the main branch.
4. **Push your branch**  to the remote repository. This is process of uploading all the commited changes into the main repository

## Setting up Git

1. **Download** Git from [https://git-scm.com/downloads](https://git-scm.com/downloads)
2. **Install** following the instructions.
3. **Clone your repo** run git bash in your directory and type **git clone** _link to repo_
4. **Edit files** locally and commit changes.
5. **Push** repo to remote repository.
